COMMAND 
set FLASK_APP=app.py
flask run --host=192.168.140.215


set FLASK_APP=app.py
flask run --host=192.168.1.17




from flask import Flask, Response
import cv2

app = Flask(__name__)

def generate_frames():
    url = "http://192.168.1.12:8080/video"
    camera = cv2.VideoCapture(url)  # Membuka web camera

    while True:
        success, frame = camera.read()  # Membaca frame dari web camera
        if not success:
            break
        else:
            ret, buffer = cv2.imencode('.jpg', frame)
            frame = buffer.tobytes()
            yield (b'--frame\r\n'
                    b'Content-Type: image/jpeg\r\n\r\n' + frame + b'\r\n')  # Menghasilkan frame sebagai respons

@app.route('/')
def video_feed():
    return Response(generate_frames(), mimetype='multipart/x-mixed-replace; boundary=frame')

if __name__ == '__main__':
    app.run(host='0.0.0.0', debug=True)










KODE KEUDA UTAMA 
from flask import Flask, Response
import cv2
import numpy as np

app = Flask(__name__)

# URL video streaming
url = 'http://192.168.1.12:8080/video'

# Buat objek VideoCapture menggunakan URL
cap = cv2.VideoCapture(url)
cap.set(cv2.CAP_PROP_FRAME_WIDTH, 1280)
cap.set(cv2.CAP_PROP_FRAME_HEIGHT, 720)

# Daftar warna yang akan dideteksi
colors = {
    "Putih": {"lower": np.array([0, 0, 150]), "upper": np.array([180, 20, 255])},
    "Hitam": {"lower": np.array([0, 0, 0]), "upper": np.array([180, 255, 50])},
    "Merah": {"lower": np.array([0, 100, 100]), "upper": np.array([10, 255, 255])},
    "Kuning": {"lower": np.array([25, 100, 100]), "upper": np.array([35, 255, 255])},
    "Hijau": {"lower": np.array([35, 100, 100]), "upper": np.array([85, 255, 255])},
    "Biru": {"lower": np.array([85, 100, 100]), "upper": np.array([125, 255, 255])},
    "Orange": {"lower": np.array([10, 100, 100]), "upper": np.array([25, 255, 255])},
    "Coklat": {"lower": np.array([10, 50, 50]), "upper": np.array([20, 255, 255])},
    "Pink tua": {"lower": np.array([145, 100, 100]), "upper": np.array([155, 255, 255])},
    "Pink muda": {"lower": np.array([155, 100, 100]), "upper": np.array([165, 255, 255])},
    "Pink": {"lower": np.array([165, 100, 100]), "upper": np.array([175, 255, 255])},
    "Merah maroon": {"lower": np.array([175, 100, 100]), "upper": np.array([180, 255, 255])},
    "Abu-abu": {"lower": np.array([0, 0, 100]), "upper": np.array([180, 20, 200])},
    "Abu-abu tua": {"lower": np.array([0, 0, 50]), "upper": np.array([180, 20, 100])},
    "Abu-abu muda": {"lower": np.array([0, 0, 150]), "upper": np.array([180, 20, 200])},
    "Merah tua": {"lower": np.array([0, 100, 100]), "upper": np.array([10, 255, 255])},
    "Kuning tua": {"lower": np.array([25, 100, 100]), "upper": np.array([35, 255, 255])},
    "Hijau tua": {"lower": np.array([35, 100, 100]), "upper": np.array([85, 255, 255])},
    "Ungu tua": {"lower": np.array([125, 100, 100]), "upper": np.array([145, 255, 255])},
    "Denim": {"lower": np.array([85, 100, 100]), "upper": np.array([125, 255, 255])},
    "Cokelat Tua": {"lower": np.array([10, 50, 50]), "upper": np.array([20, 255, 255])},
    "Cokelat Muda": {"lower": np.array([20, 50, 50]), "upper": np.array([30, 255, 255])},
    "Biru Tua": {"lower": np.array([105, 100, 100]), "upper": np.array([125, 255, 255])},
    "Biru muda": {"lower": np.array([125, 100, 100]), "upper": np.array([135, 255, 255])},
    "Biru Dongker": {"lower": np.array([135, 100, 100]), "upper": np.array([145, 255, 255])},
    "Krem": {"lower": np.array([0, 20, 150]), "upper": np.array([180, 100, 255])},
    "Emas": {"lower": np.array([20, 100, 100]), "upper": np.array([35, 255, 255])},
    "Hijau Sage": {"lower": np.array([45, 100, 100]), "upper": np.array([75, 255, 255])},
    "Hijau Army": {"lower": np.array([75, 100, 100]), "upper": np.array([95, 255, 255])}
}

def generate_frames():
    while True:
        _, frame = cap.read()
        hsv_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2HSV)
        height, width, _ = frame.shape

        cx = int(width / 2)
        cy = int(height / 2)

        # Pick pixel value
        pixel_center = hsv_frame[cy, cx]
        h, s, v = int(pixel_center[0]), int(pixel_center[1]), int(pixel_center[2])

        color = "Undefined"
        for color_name, color_range in colors.items():
            lower_range = color_range["lower"]
            upper_range = color_range["upper"]
            if lower_range[0] <= h <= upper_range[0] and lower_range[1] <= s <= upper_range[1] and lower_range[2] <= v <= upper_range[2]:
                color = color_name
                break

        pixel_center_bgr = frame[cy, cx]
        b, g, r = int(pixel_center_bgr[0]), int(pixel_center_bgr[1]), int(pixel_center_bgr[2])

        cv2.rectangle(frame, (cx - 220, 10), (cx + 200, 120), (255, 255, 255), -1)
        cv2.putText(frame, color, (cx - 200, 100), 0, 3, (b, g, r), 5)
        cv2.circle(frame, (cx, cy), 5, (25, 25, 25), 3)

        ret, buffer = cv2.imencode('.jpg', frame)
        frame = buffer.tobytes()
        yield (b'--frame\r\n'
                b'Content-Type: image/jpeg\r\n\r\n' + frame + b'\r\n')

@app.route('/')
def video_feed():
    return Response(generate_frames(), mimetype='multipart/x-mixed-replace; boundary=frame')

if __name__ == '__main__':
    app.run(host='0.0.0.0', debug=True)


